[tool.black]
line-length = 120
skip-string-normalization = true

[tool.ruff]
target-version = "py{{ cookiecutter.minimum_python_version | replace(".", "") }}"
select = ["ALL"]
extend-ignore = ["E501", "ANN201", "ANN001", "D211", "D213"]
extend-exclude = ["_version.py", "docs/conf.py",]
fix = true
line-length = 120

[tool.ruff.per-file-ignores]
"tests/*.py" = ["S101", "D103"]

[tool.pytest.ini_options]
addopts = "--cov={{ cookiecutter.__module_name }}/ --cov-report=term-missing"


[tool.hatch]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.version]
source = "vcs"
fallback-version = "0.0.0"

[tool.hatch.build.hooks.vcs]
version-file = "src/{{ cookiecutter.__module_name }}/_version.py"

[tool.hatch.envs.default]
python = "{{ cookiecutter.minimum_python_version }}"

[tool.hatch.envs.default.scripts]
test = "pytest"
lint = [
  "black .",
  "ruff --fix .",
  "mypy src/{{ cookiecutter.__module_name }}/",
]

docs-build = "make -C docs html"

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "{{ cookiecutter.project_slug }}"
authors = [
  { name = "{{ cookiecutter.project_slug }}", email = "{{ cookiecutter.email }}" }
]
description = "{{ cookiecutter.short_description }}"
readme = "README.md"
dynamic = ["version"]
classifiers = [
    "Programming Language :: Python :: 3 :: Only",
]
requires-python = ">={{ cookiecutter.minimum_python_version }}"
dependencies = [ "rich", "packaging" , "typer"]

[project.optional-dependencies]
# myst current require sphinx<6
docs = ["sphinx<6",
    "sphinx-autoapi",
    "myst-nb",
    "furo"]
dev = [
    "black",
    "mypy",
    "ruff",
    "pytest",
    "pytest-cov",
    "pytest-pycharm",
    "pytest-regressions",
    "pytest-datadir",
    "{{ cookiecutter.project_slug }}[docs]",
]


[project.urls]
Documentation = "{{ cookiecutter.repository_url }}"
Source = "{{ cookiecutter.repository_url }}"
